# ######################################
# In Simulation
# ######################################
# Necessary packages for the sensors in Gazebo: 
# ros-kinetic-hector-gazebo-pluginss and ros-kinetic-geographic-msgs
roslaunch am_gazebo am_gazebo_hrp.launch gui:=true
rosrun am_driver hrp_teleop.py

# tf publish
rosrun tf2_ros static_transform_publisher 0 0 0 0 0 0 map odom 
rqt &


# ######################################
# In practice
# ######################################
# USB cable control: /dev/ttyACM0
# UART control: /dev/ttyUSB0
roslaunch am_driver_safe automower_hrp.launch
rosrun am_driver hrp_teleop.py

# Trun off the sensor or set the control mode.
# Also can achieve in hrp_teleop node.
rostopic pub -1 cmd_mode std_msgs/UInt16 "data: 275" 


# ######################################
# Localization node
# ######################################
roslaunch am_driver_safe ekf_template.launch

# IMU&GNSS launch 
roslaunch am_sensors sensors.launch

# Calibrate the IMU. Zero the angular velocity. 
# Done automically when started.
rosservice call /imu/calibrate

# Approx. the true latitude & longitude at my desk at RISE.
# 59.40455 17.94965

# Tracking by markers.
rosrun am_sensors tracking_marker_pub

# Launch Realsense D435, now also available in am_sensors
roslaunch realsense2_camera rs_camera.launch filters:=pointcloud enable_infra1:=false enable_infra2:=false
roslaunch realsense2_camera rs_camera.launch align_depth:=true
roslaunch am_sensors rs_camera.launch


# Change cameara control valuesq.
rosrun rqt_reconfigure rqt_reconfigure

# Default launch RTAB-Map for D435. 
roslaunch am_sensors rtabmap.launch \
    rtabmap_args:="--delete_db_on_start" \
    depth_topic:=/camera/aligned_depth_to_color/image_raw \
    rgb_topic:=/camera/color/image_raw \
    camera_info_topic:=/camera/color/camera_info \
    approx_sync:=false
# Also available in am_sensors.
roslaunch am_sensors rtabmap.launch 


# View the map.
rtabmap-databaseViewer ~/.ros/rtabmap.db


# Path follower
roslaunch am_driver path_follow

# Making ros bag
rosbag record -o data.bag \
/cmd_vel /current_status \
/gnss_left/fix /gnss_left/hv /gnss_left/pose    \
/gnss_right/fix /gnss_right/hv /gnss_right/pose \
/imu_left/imu/data /imu_left/imu/data/processed /imu_left/imu/data_raw /imu_left/imu/mag     \
/imu_right/imu/data /imu_right/imu/data/processed /imu_right/imu/data_raw /imu_right/imu/mag \
/joint_states /loop \
/odom /rosout /rosout_agg\
/tf /tf_static /wheel_encoder\
/camera/color/image_raw \
/camera/aligned_depth_to_color/image_raw \
/camera/color/camera_info \
/GPSfix /cmd_mode \
/imu_euler /pose 


# Only for rtabmap to process data from D435 
rosbag record -o D435bag_test.bag \
/camera/color/image_raw \
/camera/aligned_depth_to_color/image_raw \
/camera/color/camera_info \
/tf \
/tf_static


# Not recording
/battery_status /cmd_mode /cmd_power /decision_making/am_driver_safe/events 
/decision_making/monitoring /diagnostics /motor_feedback_diff_drive
/imu_left/imu/is_calibrated /imu_left/imu_manager/bond /imu_left/rpy
/imu_right/imu/is_calibrated /imu_right/imu_manager/bond /imu_right/rpy
/nano2 /scriptable_monitor/add_script
/scriptable_monitor/remove_script /sensor_status /wheel_power /wheel_current

##########################
# Launch for outdoor test.
##########################
# On laptop
rosrun am_driver hrp_teleop.py

# On Pi-II (rosmaster)
roslaunch am_driver_safe automower_hrp.launch
roslaunch am_sensors sensors.launch


# On pi-I
roslaunch am_sensors rs_camera.launch
roslaunch am_sensors gnss.launch 

rosbag record -o test.bag \
/cmd_vel /current_status \
/gnss_left/fix /gnss_left/hv /gnss_left/pose    \
/gnss_right/fix /gnss_right/hv /gnss_right/pose \
/imu_left/imu/data /imu_left/imu/data/processed /imu_left/imu/data_raw /imu_left/imu/mag     \
/imu_right/imu/data /imu_right/imu/data/processed /imu_right/imu/data_raw /imu_right/imu/mag \
/joint_states /loop \
/odom /rosout /rosout_agg \
/tf \
/tf_static /wheel_encoder \
/camera/color/image_raw \
/camera/aligned_depth_to_color/image_raw \
/camera/color/camera_info \
/GPSfix /cmd_mode \
/imu_euler /pose 


# Plot the bag data. 
rosrun plotjuggler PlotJuggler  

# Use recorded clock in the bagfile.
rosparam set use_sim_time true
rosbag play xxxx.bag --clock


# Various sounds
uint16 MODE_SOUND_KEY_CLICK = 1024
uint16 MODE_SOUND_CLICK = 1025
uint16 MODE_SOUND_CHARGING_CONNECTED = 1026
uint16 MODE_SOUND_CHARGING_DISCONNECTED = 1027
uint16 MODE_SOUND_DOUBLE_BEEP = 1028
uint16 MODE_SOUND_LONG_BEEP = 1029
uint16 MODE_SOUND_FAULT = 1030
uint16 MODE_SOUND_START_CUTTING = 1031
uint16 MODE_SOUND_ALARM_WARNING = 1032
uint16 MODE_SOUND_ALARM_1 = 1033
uint16 MODE_SOUND_ALARM_2 = 1034
uint16 MODE_SOUND_ALARM_5 = 1035
uint16 MODE_SOUND_ALARM_10 = 1036
uint16 MODE_SOUND_TONE_1 = 1037
uint16 MODE_SOUND_OFF = 1038

# For Pi 4 simple launch.
roslaunch realsense2_camera rs_camera.launch filters:=pointcloud \
	enable_infra1:=false enable_infra2:=false initial_reset:=true

roslaunch realsense2_camera rs_camera.launch align_depth:=true \
	enable_infra1:=false enable_infra2:=false initial_reset:=true


roslaunch rtabmap_ros rtabmap.launch \
    rtabmap_args:="--delete_db_on_start" \
    depth_topic:=/camera/aligned_depth_to_color/image_raw \
    rgb_topic:=/camera/color/image_raw \
    camera_info_topic:=/camera/color/camera_info \
    approx_sync:=false

